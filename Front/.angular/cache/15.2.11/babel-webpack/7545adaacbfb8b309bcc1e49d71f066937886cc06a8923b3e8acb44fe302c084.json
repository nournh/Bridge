{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/course.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminDashboardComponent_div_26_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelement(1, \"img\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const course_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", course_r2.title);\n    i0.ɵɵproperty(\"src\", course_r2.imageUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction AdminDashboardComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 20)(2, \"div\")(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\")(7, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function AdminDashboardComponent_div_26_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const course_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.setEditCourse(course_r2));\n    });\n    i0.ɵɵtext(8, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function AdminDashboardComponent_div_26_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const course_r2 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteCourse(course_r2.id));\n    });\n    i0.ɵɵtext(10, \" Delete \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(11, AdminDashboardComponent_div_26_div_11_Template, 2, 2, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const course_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(course_r2.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" - $\", course_r2.price, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", course_r2.imageUrl);\n  }\n}\nfunction AdminDashboardComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 26)(2, \"div\", 27);\n    i0.ɵɵtext(3, \"Edit Course\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4)(5, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function AdminDashboardComponent_div_27_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.updateCourse(ctx_r8.editCourse.id, ctx_r8.editCourse));\n    });\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"label\", 7);\n    i0.ɵɵtext(8, \"Title:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminDashboardComponent_div_27_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.editCourse.title = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\", 10);\n    i0.ɵɵtext(12, \"Price:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminDashboardComponent_div_27_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.editCourse.price = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 9)(15, \"label\", 12);\n    i0.ɵɵtext(16, \"Upload Image:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 30);\n    i0.ɵɵlistener(\"change\", function AdminDashboardComponent_div_27_Template_input_change_17_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onImageSelected($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"button\", 14);\n    i0.ɵɵtext(19, \"Save\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.editCourse.title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.editCourse.price);\n  }\n}\nexport class AdminDashboardComponent {\n  constructor(courseService) {\n    this.courseService = courseService;\n    this.courses = [];\n    this.editCourse = {\n      id: 0,\n      title: '',\n      imageUrl: '',\n      price: 0\n    };\n  }\n  ngOnInit() {\n    this.loadCourses();\n  }\n  loadCourses() {\n    this.courseService.getAllCourses().subscribe(data => {\n      this.courses = data;\n    });\n  }\n  addCourse() {\n    this.courseService.addCourse(this.editCourse).subscribe(() => {\n      this.loadCourses();\n      this.editCourse = {\n        id: 0,\n        title: '',\n        imageUrl: '',\n        price: 0\n      };\n    });\n  }\n  updateCourse(id, course) {\n    this.courseService.updateCourse(id, course).subscribe(() => {\n      this.loadCourses();\n      this.editCourse = {\n        id: 0,\n        title: '',\n        imageUrl: '',\n        price: 0\n      };\n    });\n  }\n  deleteCourse(id) {\n    this.courseService.deleteCourse(id).subscribe(() => {\n      this.loadCourses();\n    });\n  }\n  // Method to copy course details into the editCourse object\n  setEditCourse(course) {\n    this.editCourse = {\n      ...course\n    };\n  }\n  static {\n    this.ɵfac = function AdminDashboardComponent_Factory(t) {\n      return new (t || AdminDashboardComponent)(i0.ɵɵdirectiveInject(i1.CourseService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminDashboardComponent,\n      selectors: [[\"app-admin-dashboard\"]],\n      decls: 28,\n      vars: 4,\n      consts: [[1, \"container\"], [1, \"my-4\", \"text-center\"], [1, \"card\", \"mb-4\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"id\", \"title\", \"name\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"mt-3\"], [\"for\", \"price\"], [\"id\", \"price\", \"type\", \"number\", \"name\", \"price\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"imageUrl\"], [\"id\", \"imageUrl\", \"type\", \"file\", \"required\", \"\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mt-3\"], [1, \"my-4\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"list-group-item\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"btn\", \"btn-warning\", \"btn-sm\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", \"ml-2\", 3, \"click\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [1, \"mt-3\"], [1, \"img-fluid\", 3, \"src\", \"alt\"], [1, \"card\", \"mt-4\"], [1, \"card-header\", \"bg-warning\", \"text-white\"], [\"id\", \"title\", \"name\", \"title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"price\", \"type\", \"number\", \"name\", \"price\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"imageUrl\", \"type\", \"file\", 1, \"form-control\", 3, \"change\"]],\n      template: function AdminDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n          i0.ɵɵtext(2, \"Admin Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3);\n          i0.ɵɵtext(5, \"Add New Course\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function AdminDashboardComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.addCourse();\n          });\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n          i0.ɵɵtext(10, \"Title:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function AdminDashboardComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.editCourse.title = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 9)(13, \"label\", 10);\n          i0.ɵɵtext(14, \"Price:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function AdminDashboardComponent_Template_input_ngModelChange_15_listener($event) {\n            return ctx.editCourse.price = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 9)(17, \"label\", 12);\n          i0.ɵɵtext(18, \"Upload Image:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"input\", 13);\n          i0.ɵɵlistener(\"change\", function AdminDashboardComponent_Template_input_change_19_listener($event) {\n            return ctx.onImageSelected($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"button\", 14);\n          i0.ɵɵtext(21, \"Add Course\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(22, \"div\")(23, \"h2\", 15);\n          i0.ɵɵtext(24, \"Courses\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 16);\n          i0.ɵɵtemplate(26, AdminDashboardComponent_div_26_Template, 12, 3, \"div\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(27, AdminDashboardComponent_div_27_Template, 20, 2, \"div\", 18);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngModel\", ctx.editCourse.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.editCourse.price);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.editCourse && ctx.editCourse.id);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","AdminDashboardComponent","constructor","courseService","id","title","imageUrl","price","ngOnInit","loadCourses","getAllCourses","subscribe","data","courses","addCourse","editCourse","updateCourse","course","deleteCourse","setEditCourse","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\BridgeFront\\qantra\\src\\app\\components\\admin-dashboard\\admin-dashboard.component.html","C:\\Users\\LENOVO\\Desktop\\BridgeFront\\qantra\\src\\app\\components\\admin-dashboard\\admin-dashboard.component.ts"],"sourcesContent":["<div class=\"container\">\r\n  <h1 class=\"my-4 text-center\">Admin Dashboard</h1>\r\n\r\n  <!-- Add Course Form -->\r\n  <div class=\"card mb-4\">\r\n    <div class=\"card-header bg-primary text-white\">Add New Course</div>\r\n    <div class=\"card-body\">\r\n      <form (ngSubmit)=\"addCourse()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"title\">Title:</label>\r\n          <input\r\n            id=\"title\"\r\n            [(ngModel)]=\"editCourse.title\"\r\n            name=\"title\"\r\n            class=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group mt-3\">\r\n          <label for=\"price\">Price:</label>\r\n          <input\r\n            id=\"price\"\r\n            type=\"number\"\r\n            [(ngModel)]=\"editCourse.price\"\r\n            name=\"price\"\r\n            class=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-group mt-3\">\r\n          <label for=\"imageUrl\">Upload Image:</label>\r\n          <input\r\n            id=\"imageUrl\"\r\n            type=\"file\"\r\n            (change)=\"onImageSelected($event)\"\r\n            class=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-success mt-3\">Add Course</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- List of Courses -->\r\n  <div>\r\n    <h2 class=\"my-4\">Courses</h2>\r\n    <div class=\"list-group\">\r\n      <div class=\"list-group-item\" *ngFor=\"let course of courses\">\r\n        <div class=\"d-flex justify-content-between\">\r\n          <div>\r\n            <strong>{{ course.title }}</strong> - ${{ course.price }}\r\n          </div>\r\n          <div>\r\n            <button\r\n              class=\"btn btn-warning btn-sm\"\r\n              (click)=\"setEditCourse(course)\"\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              class=\"btn btn-danger btn-sm ml-2\"\r\n              (click)=\"deleteCourse(course.id)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"course.imageUrl\" class=\"mt-3\">\r\n          <img [src]=\"course.imageUrl\" alt=\"{{ course.title }}\" class=\"img-fluid\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Edit Course Form -->\r\n  <div *ngIf=\"editCourse && editCourse.id\">\r\n    <div class=\"card mt-4\">\r\n      <div class=\"card-header bg-warning text-white\">Edit Course</div>\r\n      <div class=\"card-body\">\r\n        <form (ngSubmit)=\"updateCourse(editCourse.id, editCourse)\">\r\n          <div class=\"form-group\">\r\n            <label for=\"title\">Title:</label>\r\n            <input\r\n              id=\"title\"\r\n              [(ngModel)]=\"editCourse.title\"\r\n              name=\"title\"\r\n              class=\"form-control\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group mt-3\">\r\n            <label for=\"price\">Price:</label>\r\n            <input\r\n              id=\"price\"\r\n              type=\"number\"\r\n              [(ngModel)]=\"editCourse.price\"\r\n              name=\"price\"\r\n              class=\"form-control\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group mt-3\">\r\n            <label for=\"imageUrl\">Upload Image:</label>\r\n            <input\r\n              id=\"imageUrl\"\r\n              type=\"file\"\r\n              (change)=\"onImageSelected($event)\"\r\n              class=\"form-control\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-success mt-3\">Save</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CourseService, Course } from '../../services/course.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.scss'],\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n  courses: Course[] = [];\r\n  editCourse: Course = {\r\n    id: 0,\r\n    title: '',\r\n    imageUrl: '',\r\n    price: 0,\r\n  };\r\n\r\n  constructor(private courseService: CourseService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCourses();\r\n  }\r\n\r\n  loadCourses(): void {\r\n    this.courseService.getAllCourses().subscribe((data) => {\r\n      this.courses = data;\r\n    });\r\n  }\r\n\r\n  addCourse(): void {\r\n    this.courseService.addCourse(this.editCourse).subscribe(() => {\r\n      this.loadCourses();\r\n      this.editCourse = { id: 0, title: '', imageUrl: '', price: 0 };\r\n    });\r\n  }\r\n\r\n  updateCourse(id: number, course: Course): void {\r\n    this.courseService.updateCourse(id, course).subscribe(() => {\r\n      this.loadCourses();\r\n      this.editCourse = { id: 0, title: '', imageUrl: '', price: 0 };\r\n    });\r\n  }\r\n\r\n  deleteCourse(id: number): void {\r\n    this.courseService.deleteCourse(id).subscribe(() => {\r\n      this.loadCourses();\r\n    });\r\n  }\r\n\r\n  // Method to copy course details into the editCourse object\r\n  setEditCourse(course: Course): void {\r\n    this.editCourse = { ...course };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}