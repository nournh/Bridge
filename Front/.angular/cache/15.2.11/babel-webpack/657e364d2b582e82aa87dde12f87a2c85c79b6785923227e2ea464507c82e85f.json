{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n  }\n  onLogin() {\n    // Simulate admin login with hardcoded username and password\n    if (this.username === 'admin' && this.password === 'admin') {\n      localStorage.setItem('isAdminAuthenticated', 'true');\n      this.router.navigate(['/admin-dashboard']); // Redirect to admin dashboard\n    } else {\n      this.errorMessage = 'Invalid credentials. Please try again.';\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  // Combine all imports in one array\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAJ1B,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;IACrB,iBAAY,GAAW,EAAE;EAEY;EAErCC,OAAO;IACL;IACA,IAAI,IAAI,CAACC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAACC,QAAQ,KAAK,OAAO,EAAE;MAC1DC,YAAY,CAACC,OAAO,CAAC,sBAAsB,EAAE,MAAM,CAAC;MACpD,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAC7C,MAAM;MACL,IAAI,CAACC,YAAY,GAAG,wCAAwC;;EAEhE;CACD;AAhBYT,cAAc,eAP1BD,SAAS,CAAC;EACTW,QAAQ,EAAE,WAAW;EAErB;EACAC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWZ,cAAc,CAgB1B;SAhBYA,cAAc","names":["Component","LoginComponent","constructor","router","onLogin","username","password","localStorage","setItem","navigate","errorMessage","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\BridgeFront\\qantra\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  \r\n  // Combine all imports in one array\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent {\r\n  username: string = '';\r\n  password: string = '';\r\n  errorMessage: string = '';\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  onLogin(): void {\r\n    // Simulate admin login with hardcoded username and password\r\n    if (this.username === 'admin' && this.password === 'admin') {\r\n      localStorage.setItem('isAdminAuthenticated', 'true');\r\n      this.router.navigate(['/admin-dashboard']); // Redirect to admin dashboard\r\n    } else {\r\n      this.errorMessage = 'Invalid credentials. Please try again.';\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}