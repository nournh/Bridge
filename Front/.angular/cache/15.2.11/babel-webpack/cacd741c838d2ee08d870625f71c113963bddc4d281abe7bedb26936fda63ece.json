{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/course.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminDashboardComponent_tr_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵelement(2, \"img\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function AdminDashboardComponent_tr_51_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const course_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.setEditCourse(course_r1));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function AdminDashboardComponent_tr_51_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const course_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteCourse(course_r1.id));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", course_r1.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", course_r1.price, \"\");\n  }\n}\nexport class AdminDashboardComponent {\n  constructor(courseService) {\n    this.courseService = courseService;\n    this.courses = [];\n    this.editCourse = {\n      id: 0,\n      title: '',\n      imageUrl: '',\n      price: 0\n    };\n  }\n  ngOnInit() {\n    this.loadCourses();\n  }\n  loadCourses() {\n    this.courseService.getAllCourses().subscribe(data => {\n      this.courses = data;\n    });\n  }\n  addCourse() {\n    this.courseService.addCourse(this.editCourse).subscribe(() => {\n      this.loadCourses();\n      this.editCourse = {\n        id: 0,\n        title: '',\n        imageUrl: '',\n        price: 0\n      };\n    });\n  }\n  updateCourse(id, course) {\n    this.courseService.updateCourse(id, course).subscribe(() => {\n      this.loadCourses();\n      this.editCourse = {\n        id: 0,\n        title: '',\n        imageUrl: '',\n        price: 0\n      };\n    });\n  }\n  deleteCourse(id) {\n    this.courseService.deleteCourse(id).subscribe(() => {\n      this.loadCourses();\n    });\n  }\n  // Method to copy course details into the editCourse object\n  setEditCourse(course) {\n    this.editCourse = {\n      ...course\n    };\n  }\n  // Method to handle image file input\n  onImageSelected(event) {\n    const fileInput = event.target;\n    if (fileInput?.files?.length) {\n      const file = fileInput.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.editCourse.imageUrl = e.target.result; // Save base64 image data\n      };\n\n      reader.readAsDataURL(file); // Convert the image to a base64 string\n    }\n  }\n\n  static {\n    this.ɵfac = function AdminDashboardComponent_Factory(t) {\n      return new (t || AdminDashboardComponent)(i0.ɵɵdirectiveInject(i1.CourseService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminDashboardComponent,\n      selectors: [[\"app-admin-dashboard\"]],\n      decls: 52,\n      vars: 1,\n      consts: [[1, \"admin-dashboard\"], [1, \"sidebar\"], [\"href\", \"#\"], [1, \"main-content\"], [1, \"header\"], [1, \"add-course-form\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"placeholder\", \"Enter course title\", \"required\", \"\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"name\", \"price\", \"placeholder\", \"Enter course price\", \"required\", \"\"], [\"for\", \"imageUrl\"], [\"type\", \"file\", \"id\", \"imageUrl\", \"name\", \"imageUrl\", \"required\", \"\", 3, \"change\"], [\"type\", \"submit\", 3, \"click\"], [1, \"courses-list\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Course image\", 3, \"src\"], [3, \"click\"]],\n      template: function AdminDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3, \"Admin Panel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ul\")(5, \"li\")(6, \"a\", 2);\n          i0.ɵɵtext(7, \"Dashboard\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"li\")(9, \"a\", 2);\n          i0.ɵɵtext(10, \"Courses\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"li\")(12, \"a\", 2);\n          i0.ɵɵtext(13, \"Users\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"li\")(15, \"a\", 2);\n          i0.ɵɵtext(16, \"Settings\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(17, \"div\", 3)(18, \"div\", 4)(19, \"h1\");\n          i0.ɵɵtext(20, \"Admin Dashboard\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 5)(22, \"h2\");\n          i0.ɵɵtext(23, \"Add New Course\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"form\")(25, \"label\", 6);\n          i0.ɵɵtext(26, \"Title:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(27, \"input\", 7);\n          i0.ɵɵelementStart(28, \"label\", 8);\n          i0.ɵɵtext(29, \"Price:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(30, \"input\", 9);\n          i0.ɵɵelementStart(31, \"label\", 10);\n          i0.ɵɵtext(32, \"Upload Image:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"input\", 11);\n          i0.ɵɵlistener(\"change\", function AdminDashboardComponent_Template_input_change_33_listener($event) {\n            return ctx.onImageSelected($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function AdminDashboardComponent_Template_button_click_34_listener() {\n            return ctx.addCourse();\n          });\n          i0.ɵɵtext(35, \"Add Course\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(36, \"div\", 13)(37, \"h2\");\n          i0.ɵɵtext(38, \"Courses\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"table\")(40, \"thead\")(41, \"tr\")(42, \"th\");\n          i0.ɵɵtext(43, \"Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"th\");\n          i0.ɵɵtext(45, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"th\");\n          i0.ɵɵtext(47, \"Price\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"th\");\n          i0.ɵɵtext(49, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(50, \"tbody\");\n          i0.ɵɵtemplate(51, AdminDashboardComponent_tr_51_Template, 12, 3, \"tr\", 14);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(51);\n          i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n      styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 700:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: Expected identifier.\\\\n   \\u2577\\\\n19 \\u2502     background-color: #; \\\\r\\\\n   \\u2502                        ^\\\\n   \\u2575\\\\n  src\\\\\\\\app\\\\\\\\components\\\\\\\\admin-dashboard\\\\\\\\admin-dashboard.component.scss 19:24  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[700]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","AdminDashboardComponent","constructor","courseService","id","title","imageUrl","price","ngOnInit","loadCourses","getAllCourses","subscribe","data","courses","addCourse","editCourse","updateCourse","course","deleteCourse","setEditCourse","onImageSelected","event","fileInput","target","files","length","file","reader","FileReader","onload","e","result","readAsDataURL","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\BridgeFront\\qantra\\src\\app\\components\\admin-dashboard\\admin-dashboard.component.html","C:\\Users\\LENOVO\\Desktop\\BridgeFront\\qantra\\src\\app\\components\\admin-dashboard\\admin-dashboard.component.ts"],"sourcesContent":["<div class=\"admin-dashboard\">\r\n  <div class=\"sidebar\">\r\n    <h2>Admin Panel</h2>\r\n    <ul>\r\n      <li><a href=\"#\">Dashboard</a></li>\r\n      <li><a href=\"#\">Courses</a></li>\r\n      <li><a href=\"#\">Users</a></li>\r\n      <li><a href=\"#\">Settings</a></li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"main-content\">\r\n    <div class=\"header\">\r\n      <h1>Admin Dashboard</h1>\r\n    </div>\r\n    <div class=\"add-course-form\">\r\n      <h2>Add New Course</h2>\r\n      <form>\r\n        <label for=\"title\">Title:</label>\r\n        <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Enter course title\" required />\r\n\r\n        <label for=\"price\">Price:</label>\r\n        <input type=\"number\" id=\"price\" name=\"price\" placeholder=\"Enter course price\" required />\r\n\r\n        <label for=\"imageUrl\">Upload Image:</label>\r\n        <input type=\"file\" id=\"imageUrl\" name=\"imageUrl\" (change)=\"onImageSelected($event)\" required />\r\n\r\n        <button type=\"submit\" (click)=\"addCourse()\">Add Course</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"courses-list\">\r\n      <h2>Courses</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Image</th>\r\n            <th>Title</th>\r\n            <th>Price</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let course of courses\">\r\n            <td><img [src]=\"course.imageUrl\" alt=\"Course image\" /></td>\r\n            <td>{{ course.title }}</td>\r\n            <td>${{ course.price }}</td>\r\n            <td>\r\n              <button (click)=\"setEditCourse(course)\">Edit</button>\r\n              <button (click)=\"deleteCourse(course.id)\">Delete</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CourseService, Course } from '../../services/course.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.scss'],\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n  courses: Course[] = [];\r\n  editCourse: Course = {\r\n    id: 0,\r\n    title: '',\r\n    imageUrl: '',\r\n    price: 0,\r\n  };\r\n\r\n  constructor(private courseService: CourseService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCourses();\r\n  }\r\n\r\n  loadCourses(): void {\r\n    this.courseService.getAllCourses().subscribe((data) => {\r\n      this.courses = data;\r\n    });\r\n  }\r\n\r\n  addCourse(): void {\r\n    this.courseService.addCourse(this.editCourse).subscribe(() => {\r\n      this.loadCourses();\r\n      this.editCourse = { id: 0, title: '', imageUrl: '', price: 0 };\r\n    });\r\n  }\r\n\r\n  updateCourse(id: number, course: Course): void {\r\n    this.courseService.updateCourse(id, course).subscribe(() => {\r\n      this.loadCourses();\r\n      this.editCourse = { id: 0, title: '', imageUrl: '', price: 0 };\r\n    });\r\n  }\r\n\r\n  deleteCourse(id: number): void {\r\n    this.courseService.deleteCourse(id).subscribe(() => {\r\n      this.loadCourses();\r\n    });\r\n  }\r\n\r\n  // Method to copy course details into the editCourse object\r\n  setEditCourse(course: Course): void {\r\n    this.editCourse = { ...course };\r\n  }\r\n\r\n  // Method to handle image file input\r\n  onImageSelected(event: Event): void {\r\n    const fileInput = event.target as HTMLInputElement;\r\n    if (fileInput?.files?.length) {\r\n      const file = fileInput.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        this.editCourse.imageUrl = e.target.result; // Save base64 image data\r\n      };\r\n      reader.readAsDataURL(file); // Convert the image to a base64 string\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}